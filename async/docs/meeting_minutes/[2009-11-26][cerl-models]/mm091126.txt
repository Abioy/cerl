会议纪要
日期：2009.11.26
人员：许世伟，于曦鹤，段雪涛，莫华枫
主题：Cerl模型总结

Cerl模型经历了三个阶段：
1、CERL1.0模型，即复制Erlang模型。
	此模型直接使用Erlang模型。以node为基础，每个node包含若干erlang process（以下简称eproc）。eproc间通过消息交互。由于在eproc中，一个request独占process的执行线程，可能引发两个eproc间的死锁，并且阻塞其他eproc。这些问题只能通过放弃同步调用语法糖，还原到异步方式。因而引发编程的困难。

2、CERL2.0模型，对Erlang模型的改进。
	CERL2.0针对这些问题做出改进。在底层，建立async基础库。async利用fiber，确保同步调用语法糖的前提下，实现异步调用的语义。当一个调用进入异步状态之后，将执行权切换给其他request，从而消除对线程的block。
	在此基础上，对Erlang的模型做出进一步的改进。每个eproc之上可以接受多个request，每个request占用一个fiber。当一个request执行费时操作或阻塞操作时，主动将执行权切换给调度程序，使其他request得到执行。

3、CERL2.0简化模型。
	CERL2.0的标准模型实现复杂。为快速实现应用，在满足应用要求的前提下，首先实现简化的模型。简化模型直接建立在async库之上，一个node直接处理request，消除了中间的eproc层，简化实现。该模型在简单的kv数据存储等应用上基本够用，可以加快实现进度。

下一步计划：
1、完成async库，
2、实现简化模型，改造edht，测试performance
3、完成文档整理
